!function(){"use strict";var e={form:".popup__form",input:".popup__input",submitButton:".popup__submit-button",inactiveButton:"popup__submit-button_inactive",inputError:"popup__input_type_error",errorClass:"popup__input-error_active"},t=document.querySelector(".info__edit-button"),n=document.querySelector(".popup__input_type_name"),r=document.querySelector(".popup__input_type_about"),o=document.querySelector(".popup__form_type_edit"),i=(document.querySelector(".info__name"),document.querySelector(".info__about"),document.querySelector(".profile__add-button")),u=document.querySelector(".popup__form_type_add"),a=document.querySelector(".page__elements"),c=document.querySelector(".profile__avatar-container"),l=document.querySelector(".popup__form_type_avatar");function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var f=function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),s(this,"_showInputError",(function(e,t){var n=r._form.querySelector(".".concat(e.id,"-error"));e.classList.add(r._inputError),n.textContent=t,n.classList.add(r._errorClass)})),s(this,"_hideInputError",(function(e){var t=r._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._inputError),t.classList.remove(r._errorClass),t.textContent=""})),s(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),s(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),s(this,"toggleButtonState",(function(){r._hasInvalidInput(r._inputList)?(r._buttonElement.setAttribute("disabled","true"),r._buttonElement.classList.add(r._inactiveButton)):(r._buttonElement.removeAttribute("disabled"),r._buttonElement.classList.remove(r._inactiveButton))})),s(this,"_setEventListeners",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r.toggleButtonState()}))}))})),s(this,"enableValidation",(function(){r._form.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners()})),this._input=t.input,this._submitButton=t.submitButton,this._inactiveButton=t.inactiveButton,this._inputError=t.inputError,this._errorClass=t.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._input)),this._buttonElement=this._form.querySelector(this._submitButton)};function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&p(t.prototype,n),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close(this._popup)}},{key:"_handleOverlayClose",value:function(e){e.target.classList.contains("popup_opened")&&this.close(this._popup),e.target.classList.contains("popup__close")&&this.close(this._popup)}},{key:"setEventListeners",value:function(){this._popup.querySelector(".popup__close").addEventListener("click",this.close.bind(this)),this._popup.addEventListener("mousedown",this._handleOverlayClose.bind(this))}}])&&_(t.prototype,n),e}();function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return(m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function k(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._popup=document.querySelector(e),n._handleFormSubmit=t,n._inputList=n._popup.querySelectorAll(".popup__input"),n._popupForm=n._popup.querySelector(".popup__form"),n._submitButton=n._popup.querySelector(".popup__submit-button"),n}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;m(g(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"close",value:function(){m(g(u.prototype),"close",this).call(this),this._popupForm.reset()}},{key:"loadingButton",value:function(e){this._submitButton.textContent=e?"Сохранение...":"Сохранить"}}])&&v(t.prototype,n),u}(d);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=document.querySelector(n),this._aboutSelector=document.querySelector(r),this._avatarSelector=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,about:this._aboutSelector.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameSelector.textContent=t,this._aboutSelector.textContent=n}},{key:"updateAvatar",value:function(e){var t=e.avatar;this._avatarSelector.src=t}}])&&w(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){var n=t.adress,r=t.cohort,o=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._adress=n,this._cohort=r,this._headers=o}var t,n;return t=e,(n=[{key:"_checkServerAnswer",value:function(e){return e.ok?e.json():Promise.reject("Что-то пошло не так: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._adress).concat(this._cohort,"/users/me"),{headers:this._headers}).then((function(t){return e._checkServerAnswer(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._adress).concat(this._cohort,"/cards"),{headers:this._headers}).then((function(t){return e._checkServerAnswer(t)}))}},{key:"editUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._adress).concat(this._cohort,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._checkServerAnswer(e)}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this._adress).concat(this._cohort,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._checkServerAnswer(e)}))}},{key:"putLike",value:function(e){var t=this;return fetch("".concat(this._adress).concat(this._cohort,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._checkServerAnswer(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._adress).concat(this._cohort,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkServerAnswer(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._adress).concat(this._cohort,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkServerAnswer(e)}))}},{key:"editAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this._adress).concat(this._cohort,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:n})}).then((function(e){return t._checkServerAnswer(e)}))}}])&&L(t.prototype,n),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var q=function(){function e(t,n,r,o){var i=this,u=o.handleCardClick,a=o.addLike,c=o.deleteLike,l=o.handleDeleteClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),I(this,"_getTemplate",(function(){return document.querySelector(i._template).content.querySelector(".element").cloneNode(!0)})),I(this,"generateElement",(function(){i._element=i._getTemplate(),i._setEventListeners();var e=i._element.querySelector(".element__img"),t=i._element.querySelector(".element__delete-button");return i._element.querySelector(".element__text").textContent=i._name,e.src=i._link,e.alt=i._name,i._ownerId!==i._userId&&t.remove(),i.showLikeQuantity(i._likes),i._element})),I(this,"_setEventListeners",(function(){i._element.querySelector(".element__like-button").addEventListener("click",(function(){i._handleLikeClick()})),i._element.querySelector(".element__delete-button").addEventListener("click",(function(){i._handleDeleteClick(i)})),i._element.querySelector(".element__img").addEventListener("click",(function(){i._openPopupImage()}))})),I(this,"_handleLikeClick",(function(){i._cardIsLiked(i._likes)?i._deleteLike(i._cardId):i._addLike(i._cardId)})),I(this,"deleteElement",(function(){i._element.remove(),i._element=null})),I(this,"_openPopupImage",(function(){i._handleCardClick()})),this._name=t.name,this._link=t.link,this._template=r,this._handleCardClick=u,this._likes=t.likes,this._cardId=t._id,this._ownerId=t.owner._id,this._userId=n,this._addLike=a,this._deleteLike=c,this._handleDeleteClick=l}var t,n;return t=e,(n=[{key:"getCardId",value:function(){return this._cardId}},{key:"_cardIsLiked",value:function(e){var t=this;return e.some((function(e){return e._id===t._userId}))}},{key:"paintOverLike",value:function(e){this._cardIsLiked(e)?this._element.querySelector(".element__like-button").classList.add("element__like-button_active"):this._element.querySelector(".element__like-button").classList.remove("element__like-button_active")}},{key:"showLikeQuantity",value:function(e){this._likes=e,this._element.querySelector(".element__like-number").textContent=e.length,0===e.length&&(this._element.querySelector(".element__like-number").textContent=""),this.paintOverLike(e)}}])&&O(t.prototype,n),e}();function j(e){return(j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(e,t,n){return(B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function A(e,t){return(A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function R(e,t){return!t||"object"!==j(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupCardImage=t._popup.querySelector(".popup__img"),t._captionImage=t._popup.querySelector(".popup__caption"),t}return t=u,(n=[{key:"open",value:function(e,t){this._popupCardImage.src=e,this._popupCardImage.alt="увеличенное изображение ".concat(t),this._captionImage.textContent=t,B(T(u.prototype),"open",this).call(this)}}])&&P(t.prototype,n),u}(d);function D(e){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function V(e,t,n){return(V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function F(e,t){return(F=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function N(e,t){return!t||"object"!==D(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Q(e){return(Q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&F(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Q(r);if(o){var n=Q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._popup=document.querySelector(e),n._handleDeleteElement=t,n._submitButton=n._popup.querySelector(".popup__submit-button"),n}return t=u,(n=[{key:"open",value:function(e){V(Q(u.prototype),"open",this).call(this),this._card=e}},{key:"setEventListeners",value:function(){var e=this;V(Q(u.prototype),"setEventListeners",this).call(this),this._popup.querySelector(".popup__submit-button").addEventListener("click",(function(t){t.preventDefault(),e._handleDeleteElement(e._card)}))}},{key:"loadingButton",value:function(e){this._submitButton.textContent=e?"Удаление...":"Да"}}])&&U(t.prototype,n),u}(d);function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var M=null,z=new C({adress:"https://mesto.nomoreparties.co/v1/",cohort:"cohort-26",headers:{authorization:"98f3d7dc-1729-485b-86b6-af7eebdd3027","Content-Type":"application/json"}}),$=new E({nameSelector:".info__name",aboutSelector:".info__about",avatarSelector:".profile__avatar"}),G=new x(".popup_type_img");G.setEventListeners();var K=new J(".popup_type_submit",(function(e){K.loadingButton(!0),z.deleteCard(e.getCardId()).then((function(){e.deleteElement(),K.close()})).catch((function(e){console.log(e)})).finally((function(){K.loadingButton(!1)}))}));function W(e){var t=new q(e,M,".template-element",{handleCardClick:function(){G.open(e.link,e.name)},addLike:function(e){z.putLike(e).then((function(e){t.showLikeQuantity(e.likes)})).catch((function(e){console.log(e)}))},deleteLike:function(e){z.deleteLike(e).then((function(e){t.showLikeQuantity(e.likes)})).catch((function(e){console.log(e)}))},handleDeleteClick:function(e){K.open(e)}});return t.generateElement()}K.setEventListeners(),Promise.all([z.getUserInfo(),z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];console.log(o),M=o._id,$.setUserInfo(o),$.updateAvatar(o),console.log(i),X.renderItems(i.reverse())})).catch((function(e){console.log(e)}));var X=new h((function(e){X.addItem(W(e))}),a),Y=new S(".popup_type_edit",(function(e){Y.loadingButton(!0),z.editUserInfo({name:e.name,about:e.about}).then((function(e){$.setUserInfo(e),Y.close()})).catch((function(e){console.log(e)})).finally((function(){Y.loadingButton(!1)}))}));Y.setEventListeners(),t.addEventListener("click",(function(){Y.open();var e=$.getUserInfo(),t=e.name,o=e.about;n.value=t,r.value=o,te.toggleButtonState()}));var Z=new S(".popup_type_add",(function(e){Z.loadingButton(!0),z.addCard({name:e.place,link:e.link}).then((function(e){X.addItem(W(e)),Z.close()})).catch((function(e){console.log(e)})).finally((function(){Z.loadingButton(!1)}))}));Z.setEventListeners(),i.addEventListener("click",(function(){Z.open(),ne.toggleButtonState()}));var ee=new S(".popup_type_avatar",(function(e){ee.loadingButton(!0),z.editAvatar({avatar:e.avatar}).then((function(e){$.updateAvatar(e),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.loadingButton(!1)}))}));ee.setEventListeners(),c.addEventListener("click",(function(){ee.open(),re.toggleButtonState()}));var te=new f(e,o);te.enableValidation();var ne=new f(e,u);ne.enableValidation();var re=new f(e,l);re.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,